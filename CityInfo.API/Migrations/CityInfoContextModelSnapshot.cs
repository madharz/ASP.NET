// <auto-generated />
using System;
using CityInfo.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfo.API.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    partial class CityInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("CityInfo.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Divided by the Dnipro River",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The largest cemetery is Lychakivskoye",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The Old Man Lives There",
                            Name = "Ivano-Frankivsk"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Near it is located the red building of the KNU",
                            Name = "Shevchenko Park"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "This bridge was built by the mayor of Kyiv",
                            Name = "Glass bridge"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "Lviv city administration building",
                            Name = "Town hall"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "Named after the famous Ukrainian opera singer Solomiya Krushelnitskaya",
                            Name = "Lviv Opera House"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "Building in the center of Ivano-Frankivsk on Rynok Square",
                            Name = "Ivano-Frankivsk Town Hall"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            Description = "Main square of Ivano-Frankivsk, historical city center",
                            Name = "Market Square"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Model.PointOfInterestDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfInterestDto");
                });

            modelBuilder.Entity("CityInfo.API.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityInfo.API.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfo.API.Model.PointOfInterestDto", b =>
                {
                    b.HasOne("CityInfo.API.Entities.City", null)
                        .WithMany("PointOfInterests")
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("CityInfo.API.Entities.City", b =>
                {
                    b.Navigation("PointOfInterests");
                });
#pragma warning restore 612, 618
        }
    }
}
